#include <iostream>
using namespace std;

// Definition for a singly linked list node
struct ListNode {
    int val;        // Value of the node
    ListNode* next; // Pointer to the next node

    // Constructor to create a new node
    ListNode(int x) : val(x), next(nullptr) {}
};

// Function to print the linked list
void printList(ListNode* head) {
    ListNode* current = head;
    
    // Traverse the list and print each node's value
    while (current != nullptr) {
        cout << current->val << " "; // Print current node's value
        current = current->next;     // Move to the next node
    }
    cout << endl; // Newline after printing all elements
}

int main() {
    // Create the linked list: 1 -> 2 -> 3 -> 4 -> 5
    ListNode* head = new ListNode(1);
    head->next = new ListNode(2);
    head->next->next = new ListNode(3);
    head->next->next->next = new ListNode(4);
    head->next->next->next->next = new ListNode(5);
    
    // Print the linked list
    cout << "Linked List: ";
    printList(head);

    // Clean up memory
    // Delete the linked list to avoid memory leaks (important in C++)
    ListNode* current = head;
    while (current != nullptr) {
        ListNode* nextNode = current->next;
        delete current;  // Delete the current node
        current = nextNode; // Move to the next node
    }

    return 0;
}
